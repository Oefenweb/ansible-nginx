# tasks file for nginx
---
- name: configure | create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(nginx_default_owner) }}"
    group: "{{ item.group | default(nginx_default_group) }}"
    mode: "{{ item.mode | default(nginx_default_directory_mode) }}"
  with_items: "{{ nginx_required_paths + nginx_present_paths }}"
  tags:
    - nginx-configure-directories
    - nginx-configure-directories-create

- name: configure | remove paths
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nginx_absent_paths }}"
  notify: reload nginx
  tags:
    - nginx-configure-paths
    - nginx-configure-paths-remove

- name: configure | update conf.d files
  template:
    src: "{{ nginx_conf_d.template.file.lstrip('/') }}.j2"
    dest: "{{ nginx_conf_d.path }}/{{ item.name }}"
    owner: "{{ nginx_default_owner }}"
    group: "{{ nginx_default_group }}"
    mode: "{{ nginx_default_file_mode }}"
#    validate: 'nginx -t -c %s'
  notify: reload nginx
  with_items: "{{ nginx_conf_d_include_files }}"
  tags:
    - nginx-configure-conf_d

- name: configure | update snippets files
  template:
    src: "{{ nginx_snippets.template.file.lstrip('/') }}.j2"
    dest: "{{ nginx_snippets.path }}/{{ item.name }}"
    owner: "{{ nginx_default_owner }}"
    group: "{{ nginx_default_group }}"
    mode: "{{ nginx_default_file_mode }}"
#    validate: 'nginx -t -c %s'
  notify: reload nginx
  with_items: "{{ nginx_snippets_include_files }}"
  tags:
    - nginx-configure-snippets

- name: configure | update sites-available files
  template:
    src: "{{ nginx_sites_available.template.file.lstrip('/') }}.j2"
    dest: "{{ nginx_sites_available.path }}/{{ item.name }}"
    owner: "{{ nginx_default_owner }}"
    group: "{{ nginx_default_group }}"
    mode: "{{ nginx_default_file_mode }}"
#    validate: 'nginx -t -c %s'
  notify: reload nginx
  with_items: "{{ nginx_sites_available_include_files }}"
  tags:
    - nginx-configure-sites-available

- name: configure | update streams-available files
  template:
    src: "{{ nginx_streams_available.template.file.lstrip('/') }}.j2"
    dest: "{{ nginx_streams_available.path }}/{{ item.name }}"
    owner: "{{ nginx_default_owner }}"
    group: "{{ nginx_default_group }}"
    mode: "{{ nginx_default_file_mode }}"
#    validate: 'nginx -t -c %s'
  notify: reload nginx
  with_items: "{{ nginx_streams_available_include_files }}"
  tags:
    - nginx-configure-streams-available

- name: configure | update mails-available files
  template:
    src: "{{ nginx_mails_available.template.file.lstrip('/') }}.j2"
    dest: "{{ nginx_mails_available.path }}/{{ item.name }}"
    owner: "{{ nginx_default_owner }}"
    group: "{{ nginx_default_group }}"
    mode: "{{ nginx_default_file_mode }}"
#    validate: 'nginx -t -c %s'
  notify: reload nginx
  with_items: "{{ nginx_mails_available_include_files }}"
  tags:
    - nginx-configure-mails-available

- name: configure | update core file
  template:
    src: "{{ nginx_conf_file.lstrip('/') }}.j2"
    dest: "{{ nginx_conf_file }}"
    owner: "{{ nginx_default_owner }}"
    group: "{{ nginx_default_group }}"
    mode: "{{ nginx_default_file_mode }}"
    validate: 'nginx -t -c %s'
  notify: restart nginx
  tags:
    - nginx-configure-core

- name: configure | remove streams-enabled symlinks
  file:
    path: "{{ nginx_streams_enabled.path }}/{{ item.name }}"
    state: absent
  with_items: "{{ nginx_streams_available_include_files }}"
  when: item.state | default('enabled') != 'enabled'
  notify: reload nginx
  tags:
    - nginx-configure-streams-available-disabled

- name: configure | remove sites-enabled symlinks
  file:
    path: "{{ nginx_sites_enabled.path }}/{{ item.name }}"
    state: absent
  with_items: "{{ nginx_sites_available_include_files }}"
  when: item.state | default('enabled') != 'enabled'
  notify: reload nginx
  tags:
    - nginx-configure-sites-available-disabled

- name: configure | remove mails-enabled symlinks
  file:
    path: "{{ nginx_mails_enabled.path }}/{{ item.name }}"
    state: absent
  with_items: "{{ nginx_mails_available_include_files }}"
  when: item.state | default('enabled') != 'enabled'
  notify: reload nginx
  tags:
    - nginx-configure-mails-available-disabled

- name: configure | add sites-enable symlinks
  command: ln -s ../{{ nginx_sites_available.path | basename }}/{{ item.name }} ./{{ item.name }}
  args:
    chdir: "{{ nginx_sites_enabled.path }}"
    creates: "{{ nginx_sites_enabled.path }}/{{ item.name }}"
  with_items: "{{ nginx_sites_available_include_files }}"
  when: item.state | default('enabled') == 'enabled'
  notify: reload nginx
  tags:
    - nginx-configure-sites-available-enabled

- name: configure | add streams-enable symlinks
  command: ln -s ../{{ nginx_streams_available.path | basename }}/{{ item.name }} ./{{ item.name }}
  args:
    chdir: "{{ nginx_streams_enabled.path }}"
    creates: "{{ nginx_streams_enabled.path }}/{{ item.name }}"
  with_items: "{{ nginx_streams_available_include_files }}"
  when: item.state | default('enabled') == 'enabled'
  notify: reload nginx
  tags:
    - nginx-configure-streams-available-enabled

- name: configure | add mails-enable symlinks
  command: ln -s ../{{ nginx_mails_available.path | basename }}/{{ item.name }} ./{{ item.name }}
  args:
    chdir: "{{ nginx_mails_enabled.path }}"
    creates: "{{ nginx_mails_enabled.path }}/{{ item.name }}"
  with_items: "{{ nginx_mails_available_include_files }}"
  when: item.state | default('enabled') == 'enabled'
  notify: reload nginx
  tags:
    - nginx-configure-mails-available-enabled
